"""Create Tables

Revision ID: b4e47af682ca
Revises: 
Create Date: 2025-04-21 21:31:53.794761

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b4e47af682ca'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('countries',
    sa.Column('country_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('code', sa.String(length=10), nullable=True),
    sa.Column('flag_url', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('country_id')
    )
    op.create_index(op.f('ix_countries_code'), 'countries', ['code'], unique=False)
    op.create_index(op.f('ix_countries_name'), 'countries', ['name'], unique=True)
    op.create_table('players',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('firstname', sa.String(length=100), nullable=True),
    sa.Column('lastname', sa.String(length=100), nullable=True),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('birth_date', sa.Date(), nullable=True),
    sa.Column('birth_place', sa.String(length=100), nullable=True),
    sa.Column('birth_country', sa.String(length=100), nullable=True),
    sa.Column('nationality', sa.String(length=100), nullable=True),
    sa.Column('height', sa.String(length=20), nullable=True),
    sa.Column('weight', sa.String(length=20), nullable=True),
    sa.Column('number', sa.Integer(), nullable=True),
    sa.Column('position', sa.String(length=50), nullable=True),
    sa.Column('photo_url', sa.String(length=255), nullable=True),
    sa.Column('is_injured', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_players_id'), 'players', ['id'], unique=False)
    op.create_index(op.f('ix_players_is_injured'), 'players', ['is_injured'], unique=False)
    op.create_index(op.f('ix_players_lastname'), 'players', ['lastname'], unique=False)
    op.create_index(op.f('ix_players_name'), 'players', ['name'], unique=False)
    op.create_index(op.f('ix_players_position'), 'players', ['position'], unique=False)
    op.create_table('timezones',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_timezones_id'), 'timezones', ['id'], unique=False)
    op.create_index(op.f('ix_timezones_name'), 'timezones', ['name'], unique=True)
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False, comment='Unique username for login'),
    sa.Column('email', sa.String(length=255), nullable=False, comment='Unique email address'),
    sa.Column('hashed_password', sa.String(length=255), nullable=False, comment='Hashed password'),
    sa.Column('full_name', sa.String(length=150), nullable=True, comment="User's full name"),
    sa.Column('avatar_url', sa.String(length=255), nullable=True, comment="URL to user's profile picture"),
    sa.Column('role', sa.String(length=50), nullable=False, comment="User role (e.g., 'user', 'admin', 'moderator')"),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Designates whether this user account is active'),
    sa.Column('is_verified', sa.Boolean(), nullable=False, comment='Designates whether the user has verified their email'),
    sa.Column('preferences', sa.JSON(), nullable=True, comment='User-specific settings or preferences (e.g., favorite teams)'),
    sa.Column('last_login_at', sa.DateTime(timezone=True), nullable=True, comment='Timestamp of the last successful login'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_is_active'), 'users', ['is_active'], unique=False)
    op.create_index(op.f('ix_users_role'), 'users', ['role'], unique=False)
    op.create_index(op.f('ix_users_user_id'), 'users', ['user_id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('venues',
    sa.Column('venue_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=150), nullable=True, comment='Venue name'),
    sa.Column('address', sa.String(length=255), nullable=True, comment='Venue address'),
    sa.Column('city', sa.String(length=100), nullable=True, comment='City where the venue is located'),
    sa.Column('capacity', sa.Integer(), nullable=True, comment='Venue capacity'),
    sa.Column('surface', sa.String(length=50), nullable=True, comment='Playing surface (e.g., grass, artificial)'),
    sa.Column('image_url', sa.String(length=255), nullable=True, comment='URL of the venue image'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('venue_id')
    )
    op.create_index(op.f('ix_venues_city'), 'venues', ['city'], unique=False)
    op.create_index(op.f('ix_venues_name'), 'venues', ['name'], unique=False)
    op.create_index(op.f('ix_venues_venue_id'), 'venues', ['venue_id'], unique=False)
    op.create_table('leagues',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('league_id', sa.Integer(), nullable=False),
    sa.Column('season', sa.Integer(), nullable=False),
    sa.Column('is_current', sa.Boolean(), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('country_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=20), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('logo_url', sa.String(length=255), nullable=True),
    sa.Column('has_standings', sa.Boolean(), nullable=True),
    sa.Column('has_players', sa.Boolean(), nullable=True),
    sa.Column('has_top_scorers', sa.Boolean(), nullable=True),
    sa.Column('has_top_assists', sa.Boolean(), nullable=True),
    sa.Column('has_top_cards', sa.Boolean(), nullable=True),
    sa.Column('has_injuries', sa.Boolean(), nullable=True),
    sa.Column('has_predictions', sa.Boolean(), nullable=True),
    sa.Column('has_odds', sa.Boolean(), nullable=True),
    sa.Column('has_events', sa.Boolean(), nullable=True),
    sa.Column('has_lineups', sa.Boolean(), nullable=True),
    sa.Column('has_fixture_stats', sa.Boolean(), nullable=True),
    sa.Column('has_player_stats', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['country_id'], ['countries.country_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('league_id', 'season', name='uq_league_external_id_season')
    )
    op.create_index(op.f('ix_leagues_is_current'), 'leagues', ['is_current'], unique=False)
    op.create_index(op.f('ix_leagues_name'), 'leagues', ['name'], unique=False)
    op.create_table('teams',
    sa.Column('team_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False, comment='Team name'),
    sa.Column('code', sa.String(length=10), nullable=True, comment='Team code (e.g., 3-letter code)'),
    sa.Column('founded', sa.Integer(), nullable=True, comment='Year the team was founded'),
    sa.Column('is_national', sa.Boolean(), nullable=False, comment="True if it's a national team"),
    sa.Column('logo_url', sa.String(length=255), nullable=True, comment='URL of the team logo'),
    sa.Column('country_id', sa.Integer(), nullable=False),
    sa.Column('venue_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['country_id'], ['countries.country_id'], ),
    sa.ForeignKeyConstraint(['venue_id'], ['venues.venue_id'], ),
    sa.PrimaryKeyConstraint('team_id')
    )
    op.create_index(op.f('ix_teams_country_id'), 'teams', ['country_id'], unique=False)
    op.create_index(op.f('ix_teams_is_national'), 'teams', ['is_national'], unique=False)
    op.create_index(op.f('ix_teams_name'), 'teams', ['name'], unique=False)
    op.create_index(op.f('ix_teams_team_id'), 'teams', ['team_id'], unique=False)
    op.create_index(op.f('ix_teams_venue_id'), 'teams', ['venue_id'], unique=False)
    op.create_table('player_season_stats',
    sa.Column('stat_id', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=False),
    sa.Column('team_id', sa.Integer(), nullable=False),
    sa.Column('league_id', sa.Integer(), nullable=False),
    sa.Column('season', sa.Integer(), nullable=False),
    sa.Column('appearences', sa.Integer(), nullable=True),
    sa.Column('lineups', sa.Integer(), nullable=True),
    sa.Column('minutes', sa.Integer(), nullable=True),
    sa.Column('player_number', sa.Integer(), nullable=True),
    sa.Column('position', sa.String(length=50), nullable=True),
    sa.Column('rating', sa.Float(), nullable=True),
    sa.Column('captain', sa.Boolean(), nullable=True),
    sa.Column('sub_in', sa.Integer(), nullable=True),
    sa.Column('sub_out', sa.Integer(), nullable=True),
    sa.Column('sub_bench', sa.Integer(), nullable=True),
    sa.Column('shots_total', sa.Integer(), nullable=True),
    sa.Column('shots_on', sa.Integer(), nullable=True),
    sa.Column('goals_total', sa.Integer(), nullable=True),
    sa.Column('goals_conceded', sa.Integer(), nullable=True),
    sa.Column('goals_assists', sa.Integer(), nullable=True),
    sa.Column('goals_saves', sa.Integer(), nullable=True),
    sa.Column('passes_total', sa.Integer(), nullable=True),
    sa.Column('passes_key', sa.Integer(), nullable=True),
    sa.Column('passes_accuracy', sa.Integer(), nullable=True),
    sa.Column('tackles_total', sa.Integer(), nullable=True),
    sa.Column('tackles_blocks', sa.Integer(), nullable=True),
    sa.Column('tackles_interceptions', sa.Integer(), nullable=True),
    sa.Column('duels_total', sa.Integer(), nullable=True),
    sa.Column('duels_won', sa.Integer(), nullable=True),
    sa.Column('dribbles_attempts', sa.Integer(), nullable=True),
    sa.Column('dribbles_success', sa.Integer(), nullable=True),
    sa.Column('dribbles_past', sa.Integer(), nullable=True),
    sa.Column('fouls_drawn', sa.Integer(), nullable=True),
    sa.Column('fouls_committed', sa.Integer(), nullable=True),
    sa.Column('cards_yellow', sa.Integer(), nullable=True),
    sa.Column('cards_yellowred', sa.Integer(), nullable=True),
    sa.Column('cards_red', sa.Integer(), nullable=True),
    sa.Column('penalty_won', sa.Integer(), nullable=True),
    sa.Column('penalty_committed', sa.Integer(), nullable=True),
    sa.Column('penalty_scored', sa.Integer(), nullable=True),
    sa.Column('penalty_missed', sa.Integer(), nullable=True),
    sa.Column('penalty_saved', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['league_id'], ['leagues.id'], ),
    sa.ForeignKeyConstraint(['player_id'], ['players.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['teams.team_id'], ),
    sa.PrimaryKeyConstraint('stat_id'),
    sa.UniqueConstraint('player_id', 'team_id', 'league_id', 'season', name='uq_player_team_league_season_stats')
    )
    op.create_index(op.f('ix_player_season_stats_league_id'), 'player_season_stats', ['league_id'], unique=False)
    op.create_index(op.f('ix_player_season_stats_player_id'), 'player_season_stats', ['player_id'], unique=False)
    op.create_index('ix_player_season_stats_query', 'player_season_stats', ['player_id', 'league_id', 'season'], unique=False)
    op.create_index(op.f('ix_player_season_stats_season'), 'player_season_stats', ['season'], unique=False)
    op.create_index(op.f('ix_player_season_stats_team_id'), 'player_season_stats', ['team_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_player_season_stats_team_id'), table_name='player_season_stats')
    op.drop_index(op.f('ix_player_season_stats_season'), table_name='player_season_stats')
    op.drop_index('ix_player_season_stats_query', table_name='player_season_stats')
    op.drop_index(op.f('ix_player_season_stats_player_id'), table_name='player_season_stats')
    op.drop_index(op.f('ix_player_season_stats_league_id'), table_name='player_season_stats')
    op.drop_table('player_season_stats')
    op.drop_index(op.f('ix_teams_venue_id'), table_name='teams')
    op.drop_index(op.f('ix_teams_team_id'), table_name='teams')
    op.drop_index(op.f('ix_teams_name'), table_name='teams')
    op.drop_index(op.f('ix_teams_is_national'), table_name='teams')
    op.drop_index(op.f('ix_teams_country_id'), table_name='teams')
    op.drop_table('teams')
    op.drop_index(op.f('ix_leagues_name'), table_name='leagues')
    op.drop_index(op.f('ix_leagues_is_current'), table_name='leagues')
    op.drop_table('leagues')
    op.drop_index(op.f('ix_venues_venue_id'), table_name='venues')
    op.drop_index(op.f('ix_venues_name'), table_name='venues')
    op.drop_index(op.f('ix_venues_city'), table_name='venues')
    op.drop_table('venues')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_user_id'), table_name='users')
    op.drop_index(op.f('ix_users_role'), table_name='users')
    op.drop_index(op.f('ix_users_is_active'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_timezones_name'), table_name='timezones')
    op.drop_index(op.f('ix_timezones_id'), table_name='timezones')
    op.drop_table('timezones')
    op.drop_index(op.f('ix_players_position'), table_name='players')
    op.drop_index(op.f('ix_players_name'), table_name='players')
    op.drop_index(op.f('ix_players_lastname'), table_name='players')
    op.drop_index(op.f('ix_players_is_injured'), table_name='players')
    op.drop_index(op.f('ix_players_id'), table_name='players')
    op.drop_table('players')
    op.drop_index(op.f('ix_countries_name'), table_name='countries')
    op.drop_index(op.f('ix_countries_code'), table_name='countries')
    op.drop_table('countries')
    # ### end Alembic commands ###
