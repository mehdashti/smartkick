"""Create users table

Revision ID: 818ca2ea5198
Revises: f8291d837cc2
Create Date: 2025-04-16 09:30:29.376794

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '818ca2ea5198'
down_revision: Union[str, None] = 'f8291d837cc2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False, comment='Unique username for login'),
    sa.Column('email', sa.String(length=255), nullable=False, comment='Unique email address'),
    sa.Column('hashed_password', sa.String(length=255), nullable=False, comment='Hashed password'),
    sa.Column('full_name', sa.String(length=150), nullable=True, comment="User's full name"),
    sa.Column('avatar_url', sa.String(length=255), nullable=True, comment="URL to user's profile picture"),
    sa.Column('role', sa.String(length=50), nullable=False, comment="User role (e.g., 'user', 'admin', 'moderator')"),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Designates whether this user account is active'),
    sa.Column('is_verified', sa.Boolean(), nullable=False, comment='Designates whether the user has verified their email'),
    sa.Column('preferences', sa.JSON(), nullable=True, comment='User-specific settings or preferences (e.g., favorite teams)'),
    sa.Column('last_login_at', sa.DateTime(timezone=True), nullable=True, comment='Timestamp of the last successful login'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_is_active'), 'users', ['is_active'], unique=False)
    op.create_index(op.f('ix_users_role'), 'users', ['role'], unique=False)
    op.create_index(op.f('ix_users_user_id'), 'users', ['user_id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_user_id'), table_name='users')
    op.drop_index(op.f('ix_users_role'), table_name='users')
    op.drop_index(op.f('ix_users_is_active'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
