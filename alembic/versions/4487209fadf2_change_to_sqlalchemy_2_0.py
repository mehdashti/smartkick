"""change to sqlalchemy 2.0

Revision ID: 4487209fadf2
Revises: b4e47af682ca
Create Date: 2025-04-26 05:51:36.636462

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '4487209fadf2'
down_revision: Union[str, None] = 'b4e47af682ca'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('countries', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('countries', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('leagues', 'is_current',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('leagues', 'has_standings',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('leagues', 'has_players',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('leagues', 'has_top_scorers',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('leagues', 'has_top_assists',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('leagues', 'has_top_cards',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('leagues', 'has_injuries',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('leagues', 'has_predictions',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('leagues', 'has_odds',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('leagues', 'has_events',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('leagues', 'has_lineups',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('leagues', 'has_fixture_stats',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('leagues', 'has_player_stats',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('leagues', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('leagues', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('players', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('players', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('teams', 'code',
               existing_type=sa.VARCHAR(length=10),
               comment='Team code',
               existing_comment='Team code (e.g., 3-letter code)',
               existing_nullable=True)
    op.alter_column('teams', 'founded',
               existing_type=sa.INTEGER(),
               comment='Foundation year',
               existing_comment='Year the team was founded',
               existing_nullable=True)
    op.alter_column('teams', 'is_national',
               existing_type=sa.BOOLEAN(),
               comment=None,
               existing_comment="True if it's a national team",
               existing_nullable=False)
    op.alter_column('teams', 'logo_url',
               existing_type=sa.VARCHAR(length=255),
               comment='Logo URL',
               existing_comment='URL of the team logo',
               existing_nullable=True)
    op.add_column('timezones', sa.Column('offset', sa.Integer(), nullable=True, comment='UTC offset in minutes'))
    op.alter_column('timezones', 'name',
               existing_type=sa.VARCHAR(length=100),
               comment="IANA timezone name (e.g., 'America/New_York')",
               existing_nullable=False)
    op.alter_column('timezones', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('timezones', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=255),
               comment="User's email address",
               existing_comment='Unique email address',
               existing_nullable=False)
    op.alter_column('users', 'hashed_password',
               existing_type=sa.VARCHAR(length=255),
               comment='Bcrypt hashed password',
               existing_comment='Hashed password',
               existing_nullable=False)
    op.alter_column('users', 'avatar_url',
               existing_type=sa.VARCHAR(length=255),
               comment="URL to user's avatar image",
               existing_comment="URL to user's profile picture",
               existing_nullable=True)
    op.alter_column('users', 'role',
               existing_type=sa.VARCHAR(length=50),
               comment='User role (user|moderator|admin)',
               existing_comment="User role (e.g., 'user', 'admin', 'moderator')",
               existing_nullable=False)
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               comment='Account active status',
               existing_comment='Designates whether this user account is active',
               existing_nullable=False)
    op.alter_column('users', 'is_verified',
               existing_type=sa.BOOLEAN(),
               comment='Email verification status',
               existing_comment='Designates whether the user has verified their email',
               existing_nullable=False)
    op.alter_column('users', 'preferences',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               comment='User preferences JSON',
               existing_comment='User-specific settings or preferences (e.g., favorite teams)',
               existing_nullable=True)
    op.alter_column('users', 'last_login_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment='Last login timestamp',
               existing_comment='Timestamp of the last successful login',
               existing_nullable=True)
    op.add_column('venues', sa.Column('country_id', sa.Integer(), nullable=True))
    op.alter_column('venues', 'city',
               existing_type=sa.VARCHAR(length=100),
               comment='City location',
               existing_comment='City where the venue is located',
               existing_nullable=True)
    op.alter_column('venues', 'surface',
               existing_type=sa.VARCHAR(length=50),
               comment='Playing surface',
               existing_comment='Playing surface (e.g., grass, artificial)',
               existing_nullable=True)
    op.alter_column('venues', 'image_url',
               existing_type=sa.VARCHAR(length=255),
               comment='Image URL',
               existing_comment='URL of the venue image',
               existing_nullable=True)
    op.create_foreign_key(None, 'venues', 'countries', ['country_id'], ['country_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'venues', type_='foreignkey')
    op.alter_column('venues', 'image_url',
               existing_type=sa.VARCHAR(length=255),
               comment='URL of the venue image',
               existing_comment='Image URL',
               existing_nullable=True)
    op.alter_column('venues', 'surface',
               existing_type=sa.VARCHAR(length=50),
               comment='Playing surface (e.g., grass, artificial)',
               existing_comment='Playing surface',
               existing_nullable=True)
    op.alter_column('venues', 'city',
               existing_type=sa.VARCHAR(length=100),
               comment='City where the venue is located',
               existing_comment='City location',
               existing_nullable=True)
    op.drop_column('venues', 'country_id')
    op.alter_column('users', 'last_login_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment='Timestamp of the last successful login',
               existing_comment='Last login timestamp',
               existing_nullable=True)
    op.alter_column('users', 'preferences',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               comment='User-specific settings or preferences (e.g., favorite teams)',
               existing_comment='User preferences JSON',
               existing_nullable=True)
    op.alter_column('users', 'is_verified',
               existing_type=sa.BOOLEAN(),
               comment='Designates whether the user has verified their email',
               existing_comment='Email verification status',
               existing_nullable=False)
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               comment='Designates whether this user account is active',
               existing_comment='Account active status',
               existing_nullable=False)
    op.alter_column('users', 'role',
               existing_type=sa.VARCHAR(length=50),
               comment="User role (e.g., 'user', 'admin', 'moderator')",
               existing_comment='User role (user|moderator|admin)',
               existing_nullable=False)
    op.alter_column('users', 'avatar_url',
               existing_type=sa.VARCHAR(length=255),
               comment="URL to user's profile picture",
               existing_comment="URL to user's avatar image",
               existing_nullable=True)
    op.alter_column('users', 'hashed_password',
               existing_type=sa.VARCHAR(length=255),
               comment='Hashed password',
               existing_comment='Bcrypt hashed password',
               existing_nullable=False)
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=255),
               comment='Unique email address',
               existing_comment="User's email address",
               existing_nullable=False)
    op.alter_column('timezones', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('timezones', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('timezones', 'name',
               existing_type=sa.VARCHAR(length=100),
               comment=None,
               existing_comment="IANA timezone name (e.g., 'America/New_York')",
               existing_nullable=False)
    op.drop_column('timezones', 'offset')
    op.alter_column('teams', 'logo_url',
               existing_type=sa.VARCHAR(length=255),
               comment='URL of the team logo',
               existing_comment='Logo URL',
               existing_nullable=True)
    op.alter_column('teams', 'is_national',
               existing_type=sa.BOOLEAN(),
               comment="True if it's a national team",
               existing_nullable=False)
    op.alter_column('teams', 'founded',
               existing_type=sa.INTEGER(),
               comment='Year the team was founded',
               existing_comment='Foundation year',
               existing_nullable=True)
    op.alter_column('teams', 'code',
               existing_type=sa.VARCHAR(length=10),
               comment='Team code (e.g., 3-letter code)',
               existing_comment='Team code',
               existing_nullable=True)
    op.alter_column('players', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('players', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('leagues', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('leagues', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('leagues', 'has_player_stats',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('leagues', 'has_fixture_stats',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('leagues', 'has_lineups',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('leagues', 'has_events',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('leagues', 'has_odds',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('leagues', 'has_predictions',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('leagues', 'has_injuries',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('leagues', 'has_top_cards',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('leagues', 'has_top_assists',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('leagues', 'has_top_scorers',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('leagues', 'has_players',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('leagues', 'has_standings',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('leagues', 'is_current',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('countries', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('countries', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    # ### end Alembic commands ###
